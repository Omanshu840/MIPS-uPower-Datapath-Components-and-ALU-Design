$date
	Mon Jun  8 17:39:56 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module IFH_tb $end
$var wire 32 ! instruction [31:0] $end
$var reg 1 " clk $end
$var reg 32 # inputPC [31:0] $end
$scope module I $end
$var wire 1 " clk $end
$var wire 32 $ inputPC [31:0] $end
$var wire 32 % tempinstr [31:0] $end
$var wire 32 & outputPC [31:0] $end
$var reg 32 ' instruction [31:0] $end
$scope module IM $end
$var wire 32 ( address [31:0] $end
$var reg 32 ) instruction [31:0] $end
$upscope $end
$scope module PC $end
$var wire 1 " clk $end
$var wire 32 * inputPC [31:0] $end
$var reg 32 + outputPC [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx +
bx *
bx )
bx (
bx '
bx &
bx %
bx $
b0 #
0"
bx !
$end
#2
1"
#4
0"
#6
1"
